% Auto-generated: do not edit by hand
\name{dashReactPieMenu}

\alias{dashReactPieMenu}

\title{DashReactPieMenu component}

\description{

}

\usage{
dashReactPieMenu(children=NULL, id=NULL, centerRadius=NULL, centerX=NULL,
centerY=NULL, className=NULL, hidden=NULL, iconsize=NULL,
loading_state=NULL, radius=NULL)
}

\arguments{
\item{children}{Unnamed list. DashSlice components}

\item{id}{Character. The ID used to identify this component in Dash callbacks.}

\item{centerRadius}{Character. Defines the center radius. For example, 30px or 0 (no center). This prop is forwarded to the Center Component.}

\item{centerX}{Character. Defines the x position of the pie menu in CSS Unit. For example, 0px will be left-most position of its parent container.}

\item{centerY}{Character. Defines the y position of the pie menu in CSS Unit. For example, 0px will be the top-most position of its parent container.}

\item{className}{Character. Defines the center radius. For example, 30px or 0 (no center). This prop is forwarded to the Center Component.}

\item{hidden}{Logical. The ID used to identify this component in Dash callbacks.}

\item{iconsize}{Character. }

\item{loading_state}{Lists containing elements 'is_loading', 'prop_name', 'component_name'.
those elements have the following types:
  - is_loading (logical; optional): determines if the component is loading or not
  - prop_name (character; optional): holds which property is loading
  - component_name (character; optional): holds the name of the component that is loading. Assigned by Dash}

\item{radius}{Character. Defines pie menu's radius in CSS Unit. For example, 150px. `}
}

\value{named list of JSON elements corresponding to React.js properties and their values}

